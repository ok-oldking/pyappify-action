# .github/workflows/build.yml
name: Build Application

on:
  push:
    tags:
      - 'v*'

env:
  SIGN_BUILD: 'true'

jobs:
  build:
    strategy:
      matrix:
        platform: [windows-latest]
    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build with PyAppify Action
        id: build-app
        uses: ok-oldking/pyappify-action@master
        with:
          use_release: https://api.github.com/repos/ok-oldking/pyappify-action/releases/tags/v1.0.6

      - name: Extract EXE for signing
        if: env.SIGN_BUILD == 'true'
        id: extract-exe
        shell: pwsh
        run: |
          $zipFile = Get-ChildItem -Path pyappify_dist -Filter *.zip | Select-Object -First 1
          Expand-Archive -Path $zipFile.FullName -DestinationPath "temp_extract" -Force
          $exeFile = Get-ChildItem -Path "temp_extract" -Filter *.exe -Recurse | Select-Object -First 1
          Move-Item -Path $exeFile.FullName -Destination "pyappify_dist/"
          echo "EXE_NAME=$($exeFile.Name)" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append
          Remove-Item "temp_extract" -Recurse

      - name: Upload unsigned EXE artifact
        if: env.SIGN_BUILD == 'true'
        id: upload-unsigned-artifact
        uses: actions/upload-artifact@v4
        with:
          name: to-sign
          path: pyappify_dist/${{ steps.extract-exe.outputs.EXE_NAME }}

      - name: Sign EXE
        if: env.SIGN_BUILD == 'true'
        uses: signpath/github-action-submit-signing-request@v1.1
        with:
          api-token: '${{ secrets.SIGNPATH_API_TOKEN }}'
          organization-id: '639bc6dd-9623-43cd-ac75-50a445898012'
          project-slug: 'ok-wuthering-waves'
          signing-policy-slug: 'test-signing'
          artifact-configuration-slug: "single-exe"
          github-artifact-id: '${{ steps.upload-unsigned-artifact.outputs.artifact-id }}'
          wait-for-completion: true
          output-artifact-directory: 'pyappify_dist'

      - name: Update archives with signed EXE
        if: env.SIGN_BUILD == 'true'
        shell: pwsh
        run: |
          $signedExePath = "pyappify_dist/${{ steps.extract-exe.outputs.EXE_NAME }}"
          $zipFiles = Get-ChildItem -Path pyappify_dist -Filter *.zip
          foreach ($zipFile in $zipFiles) {
            $extractPath = ".\temp_update"
            if (Test-Path $extractPath) { Remove-Item $extractPath -Recurse -Force }
            Expand-Archive -Path $zipFile.FullName -DestinationPath $extractPath -Force
            $originalExe = Get-ChildItem -Path $extractPath -Filter *.exe -Recurse | Select-Object -First 1
            Copy-Item -Path $signedExePath -Destination $originalExe.FullName -Force
            Push-Location $extractPath
            $topLevelFolder = Get-ChildItem . | Select-Object -First 1
            Compress-Archive -Path $topLevelFolder.Name -DestinationPath $zipFile.FullName -Force
            Pop-Location
            Remove-Item $extractPath -Recurse -Force
          }
          Remove-Item $signedExePath

      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          body: |
            Your Release Note
          files: pyappify_dist/*.zip